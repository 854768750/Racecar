## zed_ros:
$ cd ~/catkin_ws
$ source ./devel/setup.bash
$ roslaunch zed_wrapper zed.launch
$ rqt_image_view

## caffe_ros:
$ cd ~/catkin_ws
$ source ./devel/setup.bash
$ roscore
$ rosrun ros_caffe ros_caffe_test


## darknet_ros:
$ cd [darknet_ros workspace]
$ source ./devel/setup.bash
$ roslaunch darknet_ros darknet_ros.launch


## remote access:
wifi: connect to ubnt, manully set ip address and gateway
ssh ubuntu@192.168.1.1
password:ubuntu

## Lidar:
$ rosrun urg_node urg_node _ip_address:=192.168.1.11

## IMU:
$ roslaunch razor_imu_9dof razor-pub.launch

## scpï¼š
$ sudo scp ubuntu@192.168.1.1:~/Desktop/rosgraph.png /home/Desktop
$ sudo scp /home/Desktop ubuntu@192.168.1.1:~/Desktop/rosgraph.png

## GPU Util:
$ sudo ./tegrastats

## PID control:
$ roscore
$ cd catkin_ws
$ source ./devel/setup.bash
$ rosrun rosserial_python serial_node.py /dev/ttyACM0
$ rosrun urg_node urg_node _ip_address:=192.168.1.11
$ rosrun race talker.py
$ rosrun race control.py
$ rosrun race dist_finder.py

## Joystick:
$ sudo xboxdrv --detach-kernel-driver
$ rosrun joy joy_node

## rosbag:
$ rosbag record -o /media/ubuntu/bc269b87-e580-431d-8779-a423f17ff2cf1/ -a

## C++ Profiler (could be used to profile ROS cpp executable under [ROS_ws]/devel/lib/[package_name]):
$ sudo apt-get install valgrind kcachegrind graphviz
$ valgrind --tool=callgrind [executable_name] [argument]
$ valgrind --tool=cachegrind [executable_name] [argument]
$ kcachegrind [callgrind.out.*****]
